// <auto-generated />
using System;
using MagicVilla_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comfort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupants")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualDate = new DateTime(2023, 9, 11, 18, 38, 48, 998, DateTimeKind.Local).AddTicks(5843),
                            Comfort = "",
                            CreatedDate = new DateTime(2023, 9, 11, 18, 38, 48, 998, DateTimeKind.Local).AddTicks(5800),
                            Detail = "Regular",
                            Fee = 5.0,
                            ImageUrl = "",
                            Name = "Hood Villa",
                            Occupants = 23,
                            SquareMeters = 76
                        },
                        new
                        {
                            Id = 2,
                            ActualDate = new DateTime(2023, 9, 11, 18, 38, 48, 998, DateTimeKind.Local).AddTicks(5849),
                            Comfort = "",
                            CreatedDate = new DateTime(2023, 9, 11, 18, 38, 48, 998, DateTimeKind.Local).AddTicks(5847),
                            Detail = "Full",
                            Fee = 12.0,
                            ImageUrl = "",
                            Name = "Cite Villa",
                            Occupants = 6,
                            SquareMeters = 34
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
